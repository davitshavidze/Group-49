
# 2) ივარჯიშეთ exception handling'ზე, საკლასო დავალებაში მოცემული დავალებებიდან, მეორედან მეოთხეს
# ჩათვლით თავიდან გააკეთეთ სხვანაირი მაგალითებით (სხვა ტიპის მაგალითები მოიყვანეთ, უბრალოდ ცვლადის სახელები არ შეცვალოთ)
# NameError-ის მაგალითი


try:
    print("undefined_variable")  # შეცდომა: ცვლადი არ არის განსაზღვრული, უნდა იყოს "" გარეშე
except NameError:
    print("მოხდა NameError! ცვლადი არ არის განსაზღვრული.")

# IndexError-ის მაგალითი

try:
    arr = [1, 2, 3, 4]
    print(arr[7])  # შეცდომა: სია არ შეიცავს ამ ინდექსზე ელემენტს რომლის გამოტანასაც ვცდილობთ.
except IndexError:
    print("მოხდა IndexError! სიის ინდექსი არასწორია.")

# ValueError-ის მაგალითი
try:
    num = int("abc")  # შეცდომა: სტრიქონი არ გარდაიქმნება მთელ რიცხვად, სტრინგს ვერ გადავაკეთებთ ინტეჯერად
except ValueError:
    print("მოხდა ValueError! ვერ გადავიყვანე სტრიქონი რიცხვად.")

# Try/except-ის გამოყენება გვაძლევს საშუალებას:
# - მოვაგვაროთ შეცდომები ისე რომ არ გავაჩეროთ პროგრამის შესრულება.
# - გამოვცნოთ და ვმართოთ კონკრეტული შეცდომები.
# - გავაუმჯობესოთ პროგრამის მდგრადობა და მომხმარებლისთვის მეგობრული შეტყობინებები გავუშვათ.


# 3) შექმენით ფუნქცია რომელიც იღებს რიცხვებს, ზოგი იქნება სტრინგი ზოგი იქნება ინტეჯერი (მაგ: [10, "10"]) და 
# გამოიტანეთ მათი ჯამი. (exception'ებს გაუმკლავდით try/except'ის გარეშე. hint: გამარტივებისთვის გამოიყენეთ list comprehension)

def sum_numbers(list):

    valid_numbers=[int(x) for x in list]
    return sum(valid_numbers)